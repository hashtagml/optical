[tool.poetry]
authors = [
  "Bishwarup B <write2bishwarup@gmail.com>",
  "Satheesh K <satheeshkatipomu@gmail.com>",
  "Aman G <amangupta0044@gmail.com>",
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Scientific/Engineering :: Image Recognition",
]
description = "Utilities for vision related tasks"
homepage = "https://github.com/hashtagml/optical"
include = ["MANIFEST.in", "CONTRIBUTING.md", "LICENSE"]
keywords = ["computer vision", "deep learning", "object detection"]
license = "MIT"
name = "optical"
readme = "README.md"
version = "0.0.2"

[tool.poetry.dependencies]
Pillow = "^8.2.0"
PyYAML = "^5.4.1"
Sphinx = {version = "^3.5.3", optional = true}
altair = "^4.1.0"
bounding-box = "^0.1.3"
imagesize = "^1.2.0"
joblib = "^1.0.1"
lxml = "^4.6.3"
matplotlib = "^3.4.1"
mediapy = "^0.2.2"
pandas = "^1.2.3"
python = "^3.7.1"
scikit-learn = "^0.24.1"
scikit-multilearn = "^0.2.0"
sphinx-panels = {version = "^0.5.2", optional = true}
sphinx-rtd-theme = {version = "^0.5.1", optional = true}
tensorflow-cpu = {version = "^2.4.1", optional = true}
tqdm = "^4.59.0"

[tool.poetry.dev-dependencies]
Sphinx = "^3.5.3"
black = "^20.8b1"
flake8 = "^3.9.0"
kaggle = "^1.5.12"
pytest = "^5.2"
pytest-cov = "^2.11.1"
sphinx-panels = "^0.5.2"
sphinx-rtd-theme = "^0.5.1"
tox = "^3.23.0"

[tool.poetry.extras]
docs = ["Sphinx", "sphinx-rtd-theme", "sphinx-panels"]
tensorflow = ["tensorflow-cpu"]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.black]
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
include = '\.pyi?$'
line-length = 119
target-version = ['py37', 'py38']

[tool.pytest.ini_options]
filterwarnings = [
  "error",
  "ignore::UserWarning",
  "ignore::DeprecationWarning",
  'ignore:function ham\(\) is deprecated:DeprecationWarning',
] # note the use of single quote below to denote "raw" strings in TOML
